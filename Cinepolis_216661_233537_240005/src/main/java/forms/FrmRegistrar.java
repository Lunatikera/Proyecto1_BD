/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import dtos.CiudadDTO;
import dtos.ClienteDTO;
import dtos.PaisDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import negocio.ICiudadNegocio;
import negocio.IClienteNegocio;
import negocio.IPaisNegocio;
import negocio.IPeliculaNegocio;
import negocio.NegocioException;
import utilerias.Forms;
import static utilerias.Geocalizacion.obtenerCoordenadas;

/**
 *
 * @author Chris
 */
public class FrmRegistrar extends javax.swing.JFrame {

    IClienteNegocio clienteNeg;
    IPeliculaNegocio peliNeg;
    ICiudadNegocio ciudadNeg;
    IPaisNegocio paisNeg;
    List<CiudadDTO> listaCiudades;
    List<PaisDTO> listaPaises;

    /**
     * Creates new form FrmRegistrar
     */
    public FrmRegistrar(IClienteNegocio clienteNeg, IPeliculaNegocio peliNeg,
            ICiudadNegocio ciudadNeg, IPaisNegocio paisNeg) {
        initComponents();
        this.clienteNeg = clienteNeg;
        this.peliNeg = peliNeg;
        this.ciudadNeg = ciudadNeg;
        this.paisNeg = paisNeg;
        listaCiudades = new ArrayList<>();
        listaPaises = new ArrayList<>();
        this.setLocationRelativeTo(this);
        llenarComboBoxPaises();
        try {
            System.out.println(obtenerCoordenadas());
        } catch (IOException ex) {
            Logger.getLogger(FrmRegistrar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LblLogo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtNombres = new javax.swing.JTextField();
        lblNombres = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbCiudad = new javax.swing.JComboBox<>();
        cbPais = new javax.swing.JComboBox<>();
        BtnRegistrarse = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtContraseña1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        txtApellidos1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrate - Cinepolis");

        jPanel1.setBackground(new java.awt.Color(5, 16, 42));

        LblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGO.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(LblLogo)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(LblLogo)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombres.setBackground(new java.awt.Color(187, 187, 187));
        txtNombres.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 82, 200, -1));

        lblNombres.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        lblNombres.setForeground(new java.awt.Color(0, 0, 0));
        lblNombres.setText("Nombres:");
        jPanel2.add(lblNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 87, -1, -1));

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Apellido Paterno:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 128, -1, -1));

        txtApellidos.setBackground(new java.awt.Color(187, 187, 187));
        txtApellidos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 123, 200, -1));

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Correo electronico:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 200, -1, -1));

        txtCorreo.setBackground(new java.awt.Color(187, 187, 187));
        txtCorreo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 195, 200, -1));

        txtContraseña.setBackground(new java.awt.Color(187, 187, 187));
        txtContraseña.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 236, 200, -1));

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Contraseña:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 241, -1, -1));

        jDateChooser1.setBackground(new java.awt.Color(5, 16, 42));
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 318, 200, 29));

        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Fecha de nacimiento:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 329, -1, -1));

        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Ciudad:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 413, -1, -1));

        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Pais:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 371, -1, -1));

        cbCiudad.setBackground(new java.awt.Color(187, 187, 187));
        cbCiudad.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        cbCiudad.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(cbCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 407, 200, -1));

        cbPais.setBackground(new java.awt.Color(187, 187, 187));
        cbPais.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        cbPais.setForeground(new java.awt.Color(51, 51, 51));
        cbPais.setToolTipText("");
        jPanel2.add(cbPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 365, 200, -1));

        BtnRegistrarse.setBackground(new java.awt.Color(252, 207, 4));
        BtnRegistrarse.setFont(new java.awt.Font("Calibri Light", 0, 16)); // NOI18N
        BtnRegistrarse.setForeground(new java.awt.Color(0, 0, 0));
        BtnRegistrarse.setText("Registrarse");
        BtnRegistrarse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistrarseActionPerformed(evt);
            }
        });
        jPanel2.add(BtnRegistrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 459, 190, 42));

        jLabel8.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Confirmar Contraseña: ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 282, -1, -1));

        txtContraseña1.setBackground(new java.awt.Color(187, 187, 187));
        txtContraseña1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtContraseña1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 277, 200, -1));

        jLabel9.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 48)); // NOI18N
        jLabel9.setText("Registrarse");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 10, -1, 54));

        txtApellidos1.setBackground(new java.awt.Color(187, 187, 187));
        txtApellidos1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel2.add(txtApellidos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 160, 200, -1));

        jLabel5.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Apellido Materno:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 165, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void llenarComboBoxPaises() {
        try {
            listaPaises = paisNeg.listaPaises();

            for (PaisDTO pais : listaPaises) {
                cbPais.addItem(pais.getNombre());
            }
        } catch (NegocioException ex) {
            Logger.getLogger(FrmRegistrar.class.getName()).log(Level.SEVERE, null, ex);
        }

        cbPais.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                actualizarComboBoxCiudad();
            }
        });
    }

    private void actualizarComboBoxCiudad() {
        String PaisSeleccionado = (String) cbPais.getSelectedItem();
        try {
            listaCiudades = ciudadNeg.listaCiudades(PaisSeleccionado);
        } catch (NegocioException ex) {
            Logger.getLogger(FrmRegistrar.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Limpiar el combo box de ciudades
        cbCiudad.removeAllItems();

        // Añadir las ciudades correspondientes
        if (listaCiudades != null) {
            for (CiudadDTO ciudad : listaCiudades) {
                cbCiudad.addItem(ciudad.getNombre());
            }
        }
    }


    private void BtnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistrarseActionPerformed
        this.agregarCliente();
    }//GEN-LAST:event_BtnRegistrarseActionPerformed


    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed
    }//GEN-LAST:event_bAtrasActionPerformed

    private void agregarCliente() {
        Date mFecha = jDateChooser1.getDate();

        try {
            String nombre = txtNombres.getText().trim();
            String apellidoPA = txtApellidos.getText().trim();
            String apellidoMA = txtApellidos1.getText().trim();
            String correo = txtCorreo.getText().trim();
            String contraseña = new String(txtContraseña.getPassword()).trim();
            String confirmarContraseña = new String(txtContraseña1.getPassword()).trim();
            String ciudad = cbCiudad.getSelectedItem() != null ? cbCiudad.getSelectedItem().toString() : "";
            String pais = cbPais.getSelectedItem() != null ? cbPais.getSelectedItem().toString() : "";

            if (nombre.isEmpty() || apellidoPA.isEmpty() || correo.isEmpty()
                    || contraseña.isEmpty() || confirmarContraseña.isEmpty() || ciudad.isEmpty() || pais.isEmpty() || mFecha == null) {
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Calendar cal = Calendar.getInstance();
            cal.setTime(mFecha);
            int añoNacimiento = cal.get(Calendar.YEAR);
            int añoActual = Calendar.getInstance().get(Calendar.YEAR);
            int edad = añoActual - añoNacimiento;

            if (añoNacimiento < 1900 || edad < 16) {
                JOptionPane.showMessageDialog(this, "La fecha de nacimiento no es válida.", "Error de fecha de nacimiento", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (clienteNeg.existeClienteConCorreo(correo)) {
                JOptionPane.showMessageDialog(this, "El correo electrónico ya está registrado.", "Error de correo electrónico", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "La fecha de nacimiento no es válida o no eres mayor a 16 años.", "Error de fecha de nacimiento", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!contraseña.equals(confirmarContraseña)) {
                JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.", "Error de contraseña", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (clienteNeg.existeClienteConCorreo(correo)) {
                JOptionPane.showMessageDialog(this, "El correo electrónico ya está registrado.", "Error de correo electrónico", JOptionPane.ERROR_MESSAGE);
                return;
            }

            ClienteDTO cliente = new ClienteDTO();
            cliente.setNombre(nombre);
            cliente.setApellidoPA(apellidoPA);
            cliente.setApellidoMA(apellidoMA);
            cliente.setCorreo(correo);
            cliente.setContraseña(contraseña);
            cliente.setFechaNacimiento(mFecha);
            CiudadDTO ciudadDTO = ciudadNeg.obtenerCiudadPorNombre(ciudad);
            cliente.setIdCiudad(ciudadDTO.getId());
            cliente.setUbicacion(obtenerCoordenadas());

            clienteNeg.agregaCliente(cliente);

            JOptionPane.showMessageDialog(this, "Cliente agregado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar el cliente: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRegistrarse;
    private javax.swing.JLabel LblLogo;
    private javax.swing.JComboBox<String> cbCiudad;
    private javax.swing.JComboBox<String> cbPais;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtApellidos1;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JPasswordField txtContraseña1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
